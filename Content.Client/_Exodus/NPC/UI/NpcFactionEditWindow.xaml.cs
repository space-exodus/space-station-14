using Content.Shared.NPC.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.Exodus.NPC.UI;

[GenerateTypedNameReferences]
public sealed partial class NpcFactionEditWindow : DefaultWindow
{
    public event Action<ProtoId<NpcFactionPrototype>>? OnSelectFaction;
    public event Action<ProtoId<NpcFactionPrototype>>? OnUnselectFaction;

    public NpcFactionEditWindow()
    {
        RobustXamlLoader.Load(this);
    }

    public void SetNpcName(string name)
    {
        NpcName.Text = Loc.GetString("npc-faction-ui-window-name-label", ("name", name));
    }

    public void SetFactions(HashSet<ProtoId<NpcFactionPrototype>> availableFactions, HashSet<ProtoId<NpcFactionPrototype>> selectedFactions)
    {
        FactionsList.RemoveAllChildren();

        foreach (var faction in availableFactions)
        {
            var newButton = new Button
            {
                ClipText = true,
                ToggleMode = true,
                Text = faction,
                HorizontalExpand = true,
                Pressed = selectedFactions.Contains(faction),
            };
            newButton.OnToggled += (args) =>
            {
                if (args.Pressed)
                {
                    OnSelectFaction?.Invoke(faction);
                }
                else
                {
                    OnUnselectFaction?.Invoke(faction);
                }
            };

            FactionsList.AddChild(newButton);
        }
    }
}
