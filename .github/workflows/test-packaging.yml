name: Test Packaging

on:
  push:
    branches: [master, staging, stable, upstream]
    paths:
      - "**.cs"
      - "**.csproj"
      - "**.sln"
      - "**.git**"
      - "**.yml"
      # no docs on which one of these is supposed to work, so
      # why not just do both
      - "RobustToolbox"
      - "RobustToolbox/**"
  merge_group:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches: [master, staging, stable, upstream]
    paths:
      - "**.cs"
      - "**.csproj"
      - "**.sln"
      - "**.git**"
      - "**.yml"
      - "RobustToolbox"
      - "RobustToolbox/**"

jobs:
  build:
    name: Test Packaging
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Master
        uses: actions/checkout@v4.2.2

      - name: Setup Submodule
        run: |
          git submodule update --init --recursive

      - name: Pull engine updates
        uses: space-wizards/submodule-dependency@v0.1.5

      - name: Update Engine Submodules
        run: |
          cd RobustToolbox/
          git submodule update --init --recursive

      # Exodus-Secrets-Start
      - name: Setup secrets
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        if: ${{ env.ACCESS_TOKEN != '' }}
        run: |
          git -c submodule.Secrets.update=checkout -c submodule.Secrets.url="https://${{ env.ACCESS_TOKEN }}@github.com/space-exodus/secrets.git" submodule update --init
          ./sync-secrets.sh
      # Exodus-Secrets-End

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: 9.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build Packaging
        run: dotnet build Content.Packaging --configuration Release --no-restore /m

      - name: Package server
        run: dotnet run --project Content.Packaging server --platform win-x64 --platform linux-x64 --platform osx-x64 --platform linux-arm64

      - name: Package client
        run: dotnet run --project Content.Packaging client --no-wipe-release
