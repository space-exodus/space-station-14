name: Test Packaging

on:
  push:
    branches: [ master, staging, stable ]
    paths:
      - '**.cs'
      - '**.csproj'
      - '**.sln'
      - '**.git**'
      - '**.yml'
      # no docs on which one of these is supposed to work, so
      # why not just do both
      - 'RobustToolbox'
      - 'RobustToolbox/**'
  merge_group:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ master, staging, stable ]
    paths:
      - '**.cs'
      - '**.csproj'
      - '**.sln'
      - '**.git**'
      - '**.yml'
      - 'RobustToolbox'
      - 'RobustToolbox/**'

jobs:
  build:
    name: Test Packaging
    if: github.actor != 'IanComradeBot' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Master
        uses: actions/checkout@v3.6.0

      - name: Setup Submodule
        run: |
          git submodule update --init --recursive

      - name: Pull engine updates
        uses: space-wizards/submodule-dependency@v0.1.5

      - name: Update Engine Submodules
        run: |
          cd RobustToolbox/
          git submodule update --init --recursive

      # Exodus-Secrets-Start
      - name: Setup secrets
        env:
          SSH_KEY: ${{ secrets.SECRETS_PRIVATE_KEY }}
        if: ${{ env.SSH_KEY != '' }}
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SECRETS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "HOST *" > ~/.ssh/config
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          git clone git@github.com:space-exodus/secrets.git Secrets

          if [ -f "./sync-secrets.sh" ]; then
            chmod +x ./sync-secrets.sh
            if ! ./sync-secrets.sh; then
              echo "Error when execute sync-secrets.sh"
              exit 1
            fi
          else
            echo "sync-secrets.sh don't find"
            exit 1
          fi
      # Exodus-Secrets-End

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 8.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build Packaging
        run: dotnet build Content.Packaging --configuration Release --no-restore /m

      - name: Package server
        run: dotnet run --project Content.Packaging server --platform win-x64 --platform linux-x64 --platform osx-x64 --platform linux-arm64

      - name: Package client
        run: dotnet run --project Content.Packaging client --no-wipe-release
